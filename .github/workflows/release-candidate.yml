name: Release Candidate

on:
  #workflow_run:
  #  workflows: [CI]
  #  types: [completed]
  #  branches:
  #    - release-candidate
  push:

permissions:
  contents: read

env:
  PACKAGE_NAME: rusty_logger

jobs:
  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist

      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  #macos:
  #  runs-on: macos-latest
  #  strategy:
  #    matrix:
  #      target: [x86_64, aarch64]
  #      python-version: ["3.9", "3.10", "3.11"]
  #  steps:
  #    - uses: actions/checkout@v3
  #    - uses: actions/setup-python@v4
  #      with:
  #        python-version: ${{ matrix.python-version }}
#
  #    - name: Build wheels
  #      uses: PyO3/maturin-action@v1
  #      with:
  #        target: ${{ matrix.target }}
  #        args: --release --out dist --find-interpreter
  #        sccache: 'true'
#
  #    - name: "Test sdist"
  #      run: |
  #        pip install dist/${{ env.PACKAGE_NAME }}-*.whl--force-reinstall
  #        cd ~ && python -c 'import rusty_logger'
#
  #    - name: Upload wheels
  #      uses: actions/upload-artifact@v3
  #      with:
  #        name: wheels
  #        path: dist
#
  #macos-universal:
  #  runs-on: macos-latest
  #  strategy:
  #    matrix:
  #      python-version: ["3.9", "3.10","3.11"]
  #  steps:
  #    - uses: actions/checkout@v3
  #    - uses: actions/setup-python@v4
  #      with:
  #        python-version: ${{ env.PYTHON_VERSION }}
  #        architecture: x64
#
  #    - name: "Build wheels - universal2"
  #      uses: PyO3/maturin-action@v1
  #      with:
  #        args: --release --target universal2-apple-darwin --out dist
  #        sccache: 'true'
#
  #    - name: "Test wheel - universal2"
  #      run: |
  #        pip install dist/${{ env.PACKAGE_NAME }}-*universal2.whl --force-reinstall
  #        cd ~ && python -c 'import rusty_logger'
#
  #    - name: "Upload wheels"
  #      uses: actions/upload-artifact@v3
  #      with:
  #        name: wheels
  #        path: dist
#
  #windows:
  #  runs-on: windows-latest
  #  strategy:
  #    matrix:
  #      python-version: ["3.9", "3.10", "3.11", "pypy3.9",  "pypy3.10"]
  #      target: [x64, x86]
#
  #  steps:
  #    - uses: actions/checkout@v3
  #    - uses: actions/setup-python@v4
  #      with:
  #        python-version: ${{ matrix.python-version }}
  #        architecture: ${{ matrix.target }}
#
  #    - name: Build wheels
  #      uses: PyO3/maturin-action@v1
  #      with:
  #        target: ${{ matrix.target }}
  #        args: --release --out dist --find-interpreter
  #    - name: Install build wheel
  #      shell: bash
  #      run: |
  #        pip install dist/${{ env.PACKAGE_NAME }}-*.whl--force-reinstall
  #        cd ~ && python -c 'import rusty_logger'
  #    - name: Upload wheels
  #      uses: actions/upload-artifact@v3
  #      with:
  #        name: wheels
  #        path: dist
#
  #linux:
  #  runs-on: ubuntu-latest
  #  strategy:
  #    matrix:
  #      python-version: ["3.9", "3.10", "3.11"]
  #      target: [x86_64, i686, x86, aarch64, armv7, s390x, ppc64le]
  #  steps:
  #    - uses: actions/checkout@v3
  #    - uses: actions/setup-python@v4
  #      with:
  #        python-version: ${{ matrix.python-version }}
#
  #    - name: Build Wheels
  #      uses: PyO3/maturin-action@v1
  #      with:
  #        target: ${{ matrix.target }}
  #        manylinux: auto
  #        args: --release --out dist --find-interpreter
#
  #    - name: Install build wheel
  #      if: matrix.target == 'x86_64'
  #      run: |
  #        pip install --force-reinstall dist/rusty_logger*.whl
  #        cd ~ && python -c 'import rusty_logger'
#
  #    - name: Upload wheels
  #      uses: actions/upload-artifact@v3
  #      with:
  #        name: wheels
  #        path: dist
#
    

